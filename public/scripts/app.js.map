{"version":3,"sources":["focaltome.js","instaclone.js","imageupload.js","showcase.js","singleimage.js","app.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","$locationProvider","state","url","templateUrl","otherwise","html5Mode","factory","InstacloneFactory","$http","vm","X_CSRF_TOKEN","fetchImages","callback","get","headers","then","result","data","images","fetchSingleImage","imageid","postNewImage","image","post","likeImagePost","controller","ImageUploadController","newImage","handleImageUpload","isValid","ShowcaseController","$scope","posts","handleImagePostLike","imagePost","liked","setTimeout","$apply","likes","SingleImageController","$stateParams","$","document","ready","sideNav"],"mappings":"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","file":"app.js","sourcesContent":["(() => {\n  angular\n    .module('focaltome', [ 'ui.router' ])\n    .config(($stateProvider, $urlRouterProvider, $locationProvider) => {\n      $stateProvider\n        .state('home', {\n          url: '/',\n          templateUrl: 'partials/home.html'\n        })\n        .state('new', {\n          url: '/new',\n          templateUrl: 'partials/new.html'\n        })\n        .state('image', {\n          url: '/image/{imageid}',\n          templateUrl: 'partials/image.html'\n        });\n\n      $urlRouterProvider.otherwise('/');\n      $locationProvider.html5Mode(true);\n    });\n})();\n","(() => {\n  angular\n    .module('focaltome')\n    .factory('InstacloneFactory', function InstacloneFactory($http) {\n      const vm = this;\n      const X_CSRF_TOKEN = 'mannie';\n\n      vm.fetchImages = function(callback) {\n        $http.get('http://instagramcloneclass.herokuapp.com/images', {\n          headers: {\n            X_CSRF_TOKEN\n          }\n        }).then(result => {\n          callback(result.data.images);\n        });\n      };\n\n      vm.fetchSingleImage = function(imageid, callback) {\n        $http.get(`http://instagramcloneclass.herokuapp.com/images/${imageid}`, {\n          headers: {\n            X_CSRF_TOKEN\n          }\n        }).then(result => {\n          callback(result.data);\n        });\n      };\n\n      vm.postNewImage = function(image) {\n        $http.post(\n          'http://instagramcloneclass.herokuapp.com/image/post',\n          { ...image },\n          {\n            headers: {\n              X_CSRF_TOKEN\n            }\n          }\n        );\n      };\n\n      vm.likeImagePost = function(imageid, callback) {\n        $http.post('http://instagramcloneclass.herokuapp.com/images/vote', { imageid })\n          .then(result => {\n            callback(result.data.data);\n          });\n      };\n\n      return {\n        fetchImages: vm.fetchImages,\n        fetchSingleImage: vm.fetchSingleImage,\n        postNewImage: vm.postNewImage,\n        likeImagePost: vm.likeImagePost\n      };\n    });\n})();\n","(() => {\n  angular\n    .module('focaltome')\n    .controller('ImageUploadController', [\n      'InstacloneFactory',\n      function ImageUploadController(InstacloneFactory) {\n        const vm = this;\n\n        vm.newImage = {};\n\n        vm.handleImageUpload = function(isValid) {\n          if (!isValid) return;\n\n          InstacloneFactory.postNewImage(vm.newImage);\n        };\n      }\n    ]);\n})();\n","(() => {\n  angular\n    .module('focaltome')\n    .controller('ShowcaseController', [\n      '$scope',\n      'InstacloneFactory',\n      function ShowcaseController($scope, InstacloneFactory) {\n        const vm = this;\n\n        vm.posts = [];\n\n        InstacloneFactory.fetchImages(images => {\n          vm.posts = images;\n          return vm.posts;\n        });\n\n        vm.handleImagePostLike = function(imageid, imagePost) {\n          imagePost.liked = true;\n          setTimeout(function() {\n            imagePost.liked = false;\n            $scope.$apply();\n          }, 1000);\n\n          InstacloneFactory.likeImagePost(imageid, image => {\n            imagePost.likes++;\n          });\n\n          return vm.posts;\n        };\n      }\n    ]);\n})();\n","(() => {\n  angular\n    .module('focaltome')\n    .controller('SingleImageController', [\n      '$stateParams',\n      'InstacloneFactory',\n      function SingleImageController($stateParams, InstacloneFactory) {\n        const vm = this;\n\n        InstacloneFactory.fetchSingleImage($stateParams.imageid, image => vm.post = image);\n      }\n    ]);\n})();\n","(() => {\n  $(document).ready(() => {\n    $('.button-collapse').sideNav();\n  });\n})();\n"]}