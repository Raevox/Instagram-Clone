{"version":3,"sources":["focaltome.js","instaclone.js","imageupload.js","showcase.js","app.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","$locationProvider","state","url","templateUrl","otherwise","html5Mode","factory","InstacloneFactory","$http","vm","X_CSRF_TOKEN","fetchImages","callback","get","headers","then","result","data","images","postNewImage","image","post","controller","ImageUploadController","newImage","handleImageUpload","isValid","ShowcaseController","console","log","$","document","ready","sideNav"],"mappings":";;;;AAAA,CAAA,YAAA;AACAA,UACAC,MADA,CACA,WADA,EACA,CAAA,WAAA,CADA,EAEAC,MAFA,CAEA,UAAAC,cAAA,EAAAC,kBAAA,EAAAC,iBAAA,EAAA;AACAF,mBACAG,KADA,CACA,MADA,EACA;AACAC,WAAA,GADA;AAEAC,mBAAA;AAFA,KADA,EAKAF,KALA,CAKA,KALA,EAKA;AACAC,WAAA,MADA;AAEAC,mBAAA;AAFA,KALA;;AAUAJ,uBAAAK,SAAA,CAAA,GAAA;AACAJ,sBAAAK,SAAA,CAAA,IAAA;AACA,GAfA;AAgBA,CAjBA;;ACAA,CAAA,YAAA;AACAV,UACAC,MADA,CACA,WADA,EAEAU,OAFA,CAEA,mBAFA,EAEA,SAAAC,iBAAA,CAAAC,KAAA,EAAA;AACA,QAAAC,KAAA,IAAA;AACA,QAAAC,eAAA,QAAA;;AAEAD,OAAAE,WAAA,GAAA,UAAAC,QAAA,EAAA;AACAJ,YAAAK,GAAA,CAAA,iDAAA,EAAA;AACAC,iBAAA;AACAJ;AADA;AADA,OAAA,EAIAK,IAJA,CAIA,kBAAA;AACAH,iBAAAI,OAAAC,IAAA,CAAAC,MAAA;AACA,OANA;AAOA,KARA;;AAUAT,OAAAU,YAAA,GAAA,UAAAC,KAAA,EAAAR,QAAA,EAAA;AACAJ,YAAAa,IAAA,CACA,qDADA,eAEAD,KAFA,GAGA;AACAN,iBAAA;AACAJ;AADA;AADA,OAHA,EAQAK,IARA,CAQA,kBAAA;AACAH,iBAAAI,MAAA;AACA,OAVA;AAWA,KAZA;;AAcA,WAAA;AACAL,mBAAAF,GAAAE;AADA,KAAA;AAGA,GAjCA;AAkCA,CAnCA;;ACAA,CAAA,YAAA;AACAhB,UACAC,MADA,CACA,WADA,EAEA0B,UAFA,CAEA,uBAFA,EAEA,CACA,mBADA,EAEA,SAAAC,qBAAA,CAAAhB,iBAAA,EAAA;AACA,QAAAE,KAAA,IAAA;;AAEAA,OAAAe,QAAA,GAAA,EAAA;;AAEAf,OAAAgB,iBAAA,GAAA,UAAAC,OAAA,EAAA;AACA,UAAA,CAAAA,OAAA,EAAA;AACA,KAFA;AAGA,GAVA,CAFA;AAcA,CAfA;;ACAA,CAAA,YAAA;AACA/B,UACAC,MADA,CACA,WADA,EAEA0B,UAFA,CAEA,oBAFA,EAEA,CACA,mBADA,EAEA,SAAAK,kBAAA,CAAApB,iBAAA,EAAA;AACA,QAAAE,KAAA,IAAA;;AAEAF,sBAAAI,WAAA,CAAA,kBAAA;AACAF,SAAAS,MAAA,GAAAA,MAAA;AACAU,cAAAC,GAAA,CAAApB,GAAAS,MAAA;AACA,KAHA;AAIA,GATA,CAFA;AAaA,CAdA;;ACAA,CAAA,YAAA;AACAY,IAAAC,QAAA,EAAAC,KAAA,CAAA,YAAA;AACAF,MAAA,kBAAA,EAAAG,OAAA;AACA,GAFA;AAGA,CAJA","file":"app.js","sourcesContent":["(() => {\n  angular\n    .module('focaltome', [ 'ui.router' ])\n    .config(($stateProvider, $urlRouterProvider, $locationProvider) => {\n      $stateProvider\n        .state('home', {\n          url: '/',\n          templateUrl: 'partials/home.html'\n        })\n        .state('new', {\n          url: '/new',\n          templateUrl: 'partials/new.html'\n        });\n\n      $urlRouterProvider.otherwise('/');\n      $locationProvider.html5Mode(true);\n    });\n})();\n","(() => {\n  angular\n    .module('focaltome')\n    .factory('InstacloneFactory', function InstacloneFactory($http) {\n      const vm = this;\n      const X_CSRF_TOKEN = 'mannie';\n\n      vm.fetchImages = function(callback) {\n        $http.get('http://instagramcloneclass.herokuapp.com/images', {\n          headers: {\n            X_CSRF_TOKEN\n          }\n        }).then(result => {\n          callback(result.data.images);\n        });\n      };\n\n      vm.postNewImage = function(image, callback) {\n        $http.post(\n          'http://instagramcloneclass.herokuapp.com/image/post',\n          { ...image },\n          {\n            headers: {\n              X_CSRF_TOKEN\n            }\n          }\n        ).then(result => {\n          callback(result);\n        });\n      };\n\n      return {\n        fetchImages: vm.fetchImages\n      };\n    });\n})();\n","(() => {\n  angular\n    .module('focaltome')\n    .controller('ImageUploadController', [\n      'InstacloneFactory',\n      function ImageUploadController(InstacloneFactory) {\n        const vm = this;\n\n        vm.newImage = {};\n\n        vm.handleImageUpload = function(isValid) {\n          if (!isValid) return;\n        };\n      }\n    ]);\n})();\n","(() => {\n  angular\n    .module('focaltome')\n    .controller('ShowcaseController', [\n      'InstacloneFactory',\n      function ShowcaseController(InstacloneFactory) {\n        const vm = this;\n\n        InstacloneFactory.fetchImages(images => {\n          vm.images = images;\n          console.log(vm.images);\n        });\n      }\n    ]);\n})();\n","(() => {\n  $(document).ready(() => {\n    $('.button-collapse').sideNav();\n  });\n})();\n"]}