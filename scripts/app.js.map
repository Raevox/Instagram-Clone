{"version":3,"sources":["focaltome.js","instaclone.js","imageupload.js","showcase.js","app.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","$locationProvider","state","url","templateUrl","otherwise","html5Mode","factory","InstacloneFactory","$http","vm","X_CSRF_TOKEN","fetchImages","callback","get","headers","then","result","data","images","postNewImage","image","post","likeImagePost","imageid","controller","ImageUploadController","newImage","handleImageUpload","isValid","ShowcaseController","$scope","posts","handleImagePostLike","imagePost","postId","findIndex","_id","likes","goToImagePost","console","log","$","document","ready","sideNav"],"mappings":"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","file":"app.js","sourcesContent":["(() => {\n  angular\n    .module('focaltome', [ 'ui.router' ])\n    .config(($stateProvider, $urlRouterProvider, $locationProvider) => {\n      $stateProvider\n        .state('home', {\n          url: '/',\n          templateUrl: 'partials/home.html'\n        })\n        .state('new', {\n          url: '/new',\n          templateUrl: 'partials/new.html'\n        });\n\n      $urlRouterProvider.otherwise('/');\n      $locationProvider.html5Mode(true);\n    });\n})();\n","(() => {\n  angular\n    .module('focaltome')\n    .factory('InstacloneFactory', function InstacloneFactory($http) {\n      const vm = this;\n      const X_CSRF_TOKEN = 'mannie';\n\n      vm.fetchImages = function(callback) {\n        $http.get('http://instagramcloneclass.herokuapp.com/images', {\n          headers: {\n            X_CSRF_TOKEN\n          }\n        }).then(result => {\n          callback(result.data.images);\n        });\n      };\n\n      vm.postNewImage = function(image) {\n        $http.post(\n          'http://instagramcloneclass.herokuapp.com/image/post',\n          { ...image },\n          {\n            headers: {\n              X_CSRF_TOKEN\n            }\n          }\n        );\n      };\n\n      vm.likeImagePost = function(imageid, callback) {\n        $http.post('http://instagramcloneclass.herokuapp.com/images/vote', { imageid })\n          .then(result => {\n            callback(result.data.data);\n          });\n      };\n\n      return {\n        fetchImages: vm.fetchImages,\n        postNewImage: vm.postNewImage,\n        likeImagePost: vm.likeImagePost\n      };\n    });\n})();\n","(() => {\n  angular\n    .module('focaltome')\n    .controller('ImageUploadController', [\n      'InstacloneFactory',\n      function ImageUploadController(InstacloneFactory) {\n        const vm = this;\n\n        vm.newImage = {};\n\n        vm.handleImageUpload = function(isValid) {\n          if (!isValid) return;\n\n          InstacloneFactory.postNewImage(vm.newImage);\n        };\n      }\n    ]);\n})();\n","(() => {\n  angular\n    .module('focaltome')\n    .controller('ShowcaseController', [\n      '$scope',\n      'InstacloneFactory',\n      function ShowcaseController($scope, InstacloneFactory) {\n        const vm = this;\n\n        vm.posts = [];\n\n        InstacloneFactory.fetchImages(images => {\n          vm.posts = images;\n\n          return vm.posts;\n        });\n\n        vm.handleImagePostLike = function(imageid, imagePost) {\n          InstacloneFactory.likeImagePost(imageid, image => {\n            const postId = vm.posts.findIndex(imagePost => {\n              return imagePost._id == imageid;\n            });\n\n            imagePost.likes++;\n          });\n\n          return vm.posts;\n        };\n\n        vm.goToImagePost = function(imageid) {\n          // TODO: Implement single image display\n          console.log(imageid);\n        };\n      }\n    ]);\n})();\n","(() => {\n  $(document).ready(() => {\n    $('.button-collapse').sideNav();\n  });\n})();\n"]}